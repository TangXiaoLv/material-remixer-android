
/*
 * Copyright 2016 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "checkstyle"

buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.3'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
    classpath 'com.google.gms:google-services:3.0.0'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.5.0'
  }
}

allprojects {
  repositories {
	  jcenter()
  }
}

subprojects {
  apply plugin: 'checkstyle'
  apply plugin: 'pmd'

  checkstyle {
    configFile = rootProject.file('checkstyle.xml')
    toolVersion = '7.1'
  }

  ext {
    sourceSetForJavadoc = null
    classpathForJavadoc = null
  }

  afterEvaluate { project ->
    if (project.name != ":remixer") {
      // Create the sourceset and classpath variables.
      if (project.hasProperty('android')) {
        project.ext {
          sourceSetForJavadoc = project.android.sourceSets.main.java.sourceFiles
          classpathForJavadoc = files(project.android.getBootClasspath().join(File.pathSeparator)) + project.configurations.compile
        }
      } else {
        project.ext {
          sourceSetForJavadoc = sourceSets.main.allJava
          classpathForJavadoc = sourceSets.main.compileClasspath
        }
      }
    }
  }

}

task clean(type: Delete) {
  delete rootProject.buildDir
}

ext {
  // Force release proguard when running on a Continuous Integration environment (like TravisCI).
  forceReleaseProguard = System.getenv("CI").equals("true");
  // Sdk and tools
  minSdkVersion = 16
  targetSdkVersion = 27
  compileSdkVersion = 27
  buildToolsVersion = '27.0.3'
  supportLibraryVersion = '27.1.1'
  gsonVersion = '2.8.0'
  junitVersion = '4.12'
  mockitoVersion = '1.9.5'
  robolectricVersion = '3.3.2'
  firebaseVersion = '10.0.1'
}
